name: Rust Build and Release

on:
  push:
    branches:
      - docker
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container: rust:1.86
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Cargo registry and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Clean up Cargo cache
        run: |
          cargo fetch --locked

      - name: Build release-debuginfo profile
        run: |
          cargo build --profile release-debuginfo --all-features

      - name: Build release profile
        run: |
          cargo build --release --all-features

      - name: Prepare release artefacts
        run: |
          mkdir -p release
           cd target/release
          find . -maxdepth 2 -mindepth 2 \( -type f -o -type d \) \
          ! -path "./.fingerprint*" ! -path "./build*" ! -path "./deps*" ! -path "./incremental*" \
          -exec cp -r '{}' /release ';'
          cd target/release
          find . -maxdepth 2 -mindepth 2 \( -type f -o -type d \) \
          ! -path "./.fingerprint*" ! -path "./build*" ! -path "./deps*" ! -path "./incremental*" \
          -exec cp -r '{}' /release-debuginfo ';'

      - name: Upload release artefacts
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: release/
      - name: Upload release artefacts
        uses: actions/upload-artifact@v4
        with:
          name: release-debug
          path: release-debuginfo/

